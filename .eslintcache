[{"/home/ec2-user/environment/itss_std_react_todo/src/index.js":"1","/home/ec2-user/environment/itss_std_react_todo/src/App.js":"2","/home/ec2-user/environment/itss_std_react_todo/src/reportWebVitals.js":"3","/home/ec2-user/environment/itss_std_react_todo/src/components/Todo.js":"4","/home/ec2-user/environment/itss_std_react_todo/src/components/TodoItem.js":"5","/home/ec2-user/environment/itss_std_react_todo/src/components/Input.js":"6","/home/ec2-user/environment/itss_std_react_todo/src/components/Filter.js":"7","/home/ec2-user/environment/itss_std_react_todo/src/hooks/storage.js":"8","/home/ec2-user/environment/itss_std_react_todo/src/lib/util.js":"9"},{"size":500,"mtime":1621417695803,"results":"10","hashOfConfig":"11"},{"size":691,"mtime":1621418251761,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1621417695803,"results":"13","hashOfConfig":"11"},{"size":2235,"mtime":1621417695803,"results":"14","hashOfConfig":"11"},{"size":704,"mtime":1621417695803,"results":"15","hashOfConfig":"11"},{"size":857,"mtime":1621417695803,"results":"16","hashOfConfig":"11"},{"size":762,"mtime":1621417695803,"results":"17","hashOfConfig":"11"},{"size":1025,"mtime":1621417695803,"results":"18","hashOfConfig":"11"},{"size":68,"mtime":1621417695803,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gispkf",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/home/ec2-user/environment/itss_std_react_todo/src/index.js",[],"/home/ec2-user/environment/itss_std_react_todo/src/App.js",[],"/home/ec2-user/environment/itss_std_react_todo/src/reportWebVitals.js",[],"/home/ec2-user/environment/itss_std_react_todo/src/components/Todo.js",["41"],"import React, { useState } from 'react';\n\n/* \n  【Todoのデータ構成】\n　・key：Todoを特定するID（String）\n　・text：Todoの内容（String）\n　・done：完了状態（Boolean true:完了済み,, false:未完了）\n*/\n\n/* コンポーネント */\nimport TodoItem from './TodoItem';\nimport Input from './Input';\nimport Filter from './Filter';\n\n/* カスタムフック */\nimport useStorage from '../hooks/storage';\n\n/* ライブラリ */\nimport {getKey} from \"../lib/util\";\n\nfunction Todo() {\n  const [items, putItems, clearItems] = useStorage();\n  // const [items, putItems] = React.useState([\n  //     /* テストコード 開始 */\n  //   { key: getKey(), text: '日本語の宿題', done: false },\n  //   { key: getKey(), text: 'reactを勉強する', done: false },\n  //   { key: getKey(), text: '明日の準備をする', done: false },\n  //   /* テストコード 終了 */\n  // ]);\n\n  const handleCheck = checked => {\n    const newItems = items.map(item => {\n      if (item.key === checked.key) {\n        item.done = !item.done;\n      }\n      return item;\n    });\n    putItems(newItems);\n  };\n  \n   const handleAdd = text => {\n    putItems([...items, { key: getKey(), text, done: false }]);\n  };\n    \n   const [filter, setFilter] = useState('all');\n   \n    const renderItems = items.filter((item) => {\n    if (filter === 'all') return item;\n    if (filter === 'doing') return !item.done;\n    if (filter === 'done') return item.done;\n  }); \n  // loc items\n    const handleFilter = (text)=>{\n     setFilter(text);\n   };\n   \n  return (\n    <div className=\"panel\">\n      <div className=\"panel-heading\">\n        ITSS ToDoアプリ\n      </div>\n       <Input handleAdd = {handleAdd}/>\n        <Filter filter = {filter} handleFilter= {handleFilter}/>\n      {renderItems.map(item => (\n        <TodoItem\n          key = {items.key}\n          item = {item}\n          onCheck={handleCheck}\n        />\n      ))}\n      <div className=\"panel-block\">\n        {renderItems.length} items\n      </div>\n       <div className=\"panel-block\">\n        <button className=\"button is-light is-fullwidth\" onClick={clearItems}>\n          全てのToDoを削除\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Todo;",["42","43"],"/home/ec2-user/environment/itss_std_react_todo/src/components/TodoItem.js",[],"/home/ec2-user/environment/itss_std_react_todo/src/components/Input.js",[],"/home/ec2-user/environment/itss_std_react_todo/src/components/Filter.js",["44","45","46","47","48","49"],"/* \n  【Filterコンポーネント】\n　・該当するTodoをステータス毎にで分けてリスト表示する\n　・タブで表示する\n　・サポートするステータスは「すべて」「未完了」「完了済み」\n*/\nfunction Filter( {handleFilter, filter} ) {\n  return (\n   <div className=\"panel-tabs\">\n      <a \n      style = {{color: `${filter == 'all'? 'black' : ''}`}}\n      onClick = {() => handleFilter('all') }>全て</a>\n      <a \n       style = {{color: `${filter == 'doing'? 'black' : ''}`}}\n      onClick = {() => handleFilter('doing')}>未完了</a>\n      <a \n       style = {{color: `${filter == 'done'? 'black' : ''}`}}\n      onClick = {() => handleFilter('done')}>完了済み</a>\n    </div>\n  );\n}\n\nexport default Filter","/home/ec2-user/environment/itss_std_react_todo/src/hooks/storage.js",[],"/home/ec2-user/environment/itss_std_react_todo/src/lib/util.js",[],{"ruleId":"50","severity":1,"message":"51","line":47,"column":45,"nodeType":"52","messageId":"53","endLine":47,"endColumn":47},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":10,"column":7,"nodeType":"60","endLine":12,"endColumn":46},{"ruleId":"61","severity":1,"message":"62","line":11,"column":34,"nodeType":"63","messageId":"64","endLine":11,"endColumn":36},{"ruleId":"58","severity":1,"message":"59","line":13,"column":7,"nodeType":"60","endLine":15,"endColumn":47},{"ruleId":"61","severity":1,"message":"62","line":14,"column":35,"nodeType":"63","messageId":"64","endLine":14,"endColumn":37},{"ruleId":"58","severity":1,"message":"59","line":16,"column":7,"nodeType":"60","endLine":18,"endColumn":46},{"ruleId":"61","severity":1,"message":"62","line":17,"column":35,"nodeType":"63","messageId":"64","endLine":17,"endColumn":37},"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-native-reassign",["65"],"no-negated-in-lhs",["66"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]